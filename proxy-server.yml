# Make the application available at http://localhost:8080
# These are default settings, but we add them for clarity.

 # cloud:
  ##      uri: http://localhost:8888

# Configure the Authorization Server and User Info Resource Server details
security:
  oauth2:
    client:
      accessTokenUri: http://localhost:8081/authorization-server/oauth/token
      #userAuthorizationUri: http://localhost:7070/authserver/oauth/authorize
      clientId: R2dpxQ3vPrtfgF72
      clientSecret: fDw7Mpkk5czHNuSRtmhGmAGL42CaxQB9
    resource:
      userInfoUri: http://localhost:9999/user

      jwt:
        keyValue: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAhiiifKv6Otf5PyqIE+LQ
            EiJRRh6q8piPY9Okq+RfRu9Bue0D8hq7aFxcgkLZ6Bg9CAS+w1KdaE5MMeOCVVxv
            rpRETzVpAsh6GL5nBc679jSqMzjr3V4uty46ilL4VHKSxlZh5Nmz5EMHPI5iwpNs
            8U5n3QiwsTk514FXad54xPSPH3i/pDzGSZHrVcwDVaOKn7gFiIqP86vkJB47JZv8
            T6P5RK7Rj06zoG45DMGWG3DQv6o1/Jm4IJQWj0AUD3bSHqzXkPr7qyMYvkE4kyMH
            6aVAsAYMxilZFlJMv2b8N883gdi3LEeOJo8zZr5IWyyROfepdeOL7UkAXddAj+dL
            WQIDAQAB
            -----END PUBLIC KEY----- 

zuul:
  ribbon:
     eager-load:
        enabled: true
  sensitiveHeaders: Cookie,Set-Cookie
  routes:
    resource:

      #product
    boutique:
      path: /boutique-service/**
      sensitiveHeaders:
      serviceId: boutique-service 
    #  strip-prefix: false  
        #profile
    profile:
      path: /profile-service/**
      sensitiveHeaders: 
      serviceId: profile-service  
     # strip-prefix: false   
      
    #offre
    offre:
      path: /offre-service/**
      sensitiveHeaders:
      serviceId: offre-service 
      
         #operation
    user:
      path: /user-service/**
      serviceId: user-service 
      
       #auth
    auth-server:
      path: http://localhost:7070/createUser
      serviceId: authorization-server   
      
   #operation
    client-space:
      path: /client-space-service/**
      serviceId: client-space-service           
      
    
# Make sure the OAuth2 token is only relayed when using the internal API,
# do not pass any authentication to the external API
#proxy:
 # auth:
  #  routes:
   #   profile: oauth2
    #  product: oauth2 



server:
  servlet:
    context-path: /
  port: 9999

# Configure the Authorization Server and User Info Resource Server details

  
      
      
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  #  healthcheck:
   #   enabled: true
  #instance:
   # prefer-ip-address: true      
      
